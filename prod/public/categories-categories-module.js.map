{"version":3,"sources":["webpack:///./src/app/admin/categories/categories-routing.module.ts","webpack:///./src/app/admin/categories/categories.component.html","webpack:///./src/app/admin/categories/categories.component.scss","webpack:///./src/app/admin/categories/categories.component.ts","webpack:///./src/app/admin/categories/categories.module.ts","webpack:///./src/app/admin/categories/create/create.component.html","webpack:///./src/app/admin/categories/create/create.component.scss","webpack:///./src/app/admin/categories/create/create.component.ts","webpack:///./src/app/admin/categories/delete/delete.component.html","webpack:///./src/app/admin/categories/delete/delete.component.scss","webpack:///./src/app/admin/categories/delete/delete.component.ts","webpack:///./src/app/admin/categories/update/update.component.html","webpack:///./src/app/admin/categories/update/update.component.scss","webpack:///./src/app/admin/categories/update/update.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AACK;AACA;AACA;AACC;AAE7D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,yEAAmB,EAAE,QAAQ,EAAE;YAClD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,wEAAe,EAAE;YAC/C,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,wEAAe,EAAE;YAClD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,wEAAe,EAAE;YACvD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,wEAAe,EAAE;YAChD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,wEAAe,EAAE;SACtD;KACF;CACF,CAAC;AAMF;IAAA;IAAuC,CAAC;IAA3B,uBAAuB;QAJnC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,uBAAuB,CAAI;IAAD,8BAAC;CAAA;AAAJ;;;;;;;;;;;;ACvBpC,8KAA8K,0BAA0B,sJAAsJ,iCAAiC,iVAAiV,aAAa,gQAAgQ,cAAc,mQAAmQ,qBAAqB,+QAA+Q,+BAA+B,mrBAAmrB,2BAA2B,2R;;;;;;;;;;;ACA/vE,wCAAwC,uBAAuB,EAAE,qCAAqC,oBAAoB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1E;AACD;AAEQ;AAChB;AAUzC;IAAyC,uCAAc;IACrD,6BACS,OAA0B,EAC1B,MAAc;QAFvB,YAIE,kBACE,OAAO,EACP,MAAM,EACN,CAAC,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,UAAU,EAAE,SAAS,CAAC,CACrD,SACF;QARQ,aAAO,GAAP,OAAO,CAAmB;QAC1B,YAAM,GAAN,MAAM,CAAQ;;IAOvB,CAAC;IAVU,mBAAmB;QAR/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAM3B,CAAC;yCAGkB,qEAAiB;YAClB,sDAAM;OAHZ,mBAAmB,CAW/B;IAAD,0BAAC;CAAA,CAXwC,yDAAI,GAW5C;AAX+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACd0B;AACjB;AAE6B;AACT;AACD;AACA;AACA;AACF;AAW1D;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAT5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,kEAAY,EAAE,kEAAY,EAAE,kFAAuB,CAAC;YAC9D,YAAY,EAAE;gBACZ,yEAAmB;gBACnB,wEAAe;gBACf,wEAAe;gBACf,wEAAe;aAChB;SACF,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;ACnB7B,0JAA0J,iCAAiC,65C;;;;;;;;;;;ACA3L,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0D;AACD;AAC2B;AAC/B;AACM;AACH;AACW;AAWnE;IAAqC,mCAAgB;IAInD,yBACS,iBAAoC,EACpC,MAAc,EACd,KAAqB,EACrB,aAAmC;QAJ5C,YAME,kBAAM,iBAAiB,EAAE,aAAa,EAAE,MAAM,EAAE,KAAK,CAAC,SACvD;QANQ,uBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,YAAM,GAAN,MAAM,CAAQ;QACd,WAAK,GAAL,KAAK,CAAgB;QACrB,mBAAa,GAAb,aAAa,CAAsB;QAL5C,cAAQ,GAAG,IAAI,gEAAQ,EAAE,CAAC;;IAQ1B,CAAC;IAED,kCAAQ,GAAR,UAAS,IAAY;QAArB,iBAkBC;QAjBC,2BAA2B;QAC3B,IAAI,CAAC,MAAM;aACR,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;aACzC,SAAS,CACR,UAAC,QAAgB;YACf,yBAAyB;YACzB,oCAAoC;YACpC,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACzC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,kEAAkE;YAChG,0DAA0D;YAC1D,2BAA2B;YAC3B,iBAAM,QAAQ,aAAC,IAAI,CAAC,CAAC;QACvB,CAAC,EACD,UAAC,KAAwB;YACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACN,CAAC;IA7BD;QADC,+DAAS,CAAC,wEAAe,CAAC;kCACnB,wEAAe;mDAAC;IAFb,eAAe;QAR3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAMvB,CAAC;yCAM4B,qEAAiB;YAC5B,sDAAM;YACP,8DAAc;YACN,yFAAoB;OARjC,eAAe,CAgC3B;IAAD,sBAAC;CAAA,CAhCoC,6DAAM,GAgC1C;AAhC2B;;;;;;;;;;;;ACjB5B,uJAAuJ,aAAa,2HAA2H,aAAa,eAAe,OAAO,4Q;;;;;;;;;;;ACAlU,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0D;AACD;AACf;AAC0C;AAC5B;AAWxD;IAAqC,mCAAgB;IACnD,yBACS,iBAAoC,EACpC,aAAmC,EACnC,MAAc,EACd,KAAqB;QAJ9B,YAME,kBAAM,iBAAiB,EAAE,aAAa,EAAE,MAAM,EAAE,KAAK,CAAC,SACvD;QANQ,uBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,mBAAa,GAAb,aAAa,CAAsB;QACnC,YAAM,GAAN,MAAM,CAAQ;QACd,WAAK,GAAL,KAAK,CAAgB;;IAG9B,CAAC;IARU,eAAe;QAR3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAMvB,CAAC;yCAG4B,qEAAiB;YACrB,yFAAoB;YAC3B,sDAAM;YACP,8DAAc;OALnB,eAAe,CAS3B;IAAD,sBAAC;CAAA,CAToC,6DAAM,GAS1C;AAT2B;;;;;;;;;;;;ACf5B,6JAA6J,iCAAiC,opC;;;;;;;;;;;ACA9L,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAqD;AAEI;AACC;AAC0B;AAC5B;AACW;AAYnE;IAAqC,mCAAgB;IAGnD,yBACS,OAA0B,EAC1B,aAAmC,EACnC,MAAc,EACd,KAAqB;QAJ9B,YAME,kBAAM,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,KAAK,CAAC,SAC7C;QANQ,aAAO,GAAP,OAAO,CAAmB;QAC1B,mBAAa,GAAb,aAAa,CAAsB;QACnC,YAAM,GAAN,MAAM,CAAQ;QACd,WAAK,GAAL,KAAK,CAAgB;;IAG9B,CAAC;IAED,kCAAQ,GAAR,UAAS,IAAY;QAArB,iBAiBC;QAhBC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CACnD,UAAC,QAAgB;YACf,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC5C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YACnC,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,0BAA0B;YAC1B,iBAAM,QAAQ,aAAC,IAAI,CAAC,CAAC;QACvB,CAAC,EACD,UAAC,KAAwB;YACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CACF,CAAC;IACJ,CAAC;IA3BD;QADC,+DAAS,CAAC,wEAAe,CAAC;kCACnB,wEAAe;mDAAC;IAFb,eAAe;QAR3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAMvB,CAAC;yCAKkB,qEAAiB;YACX,yFAAoB;YAC3B,sDAAM;YACP,8DAAc;OAPnB,eAAe,CA8B3B;IAAD,sBAAC;CAAA,CA9BoC,6DAAM,GA8B1C;AA9B2B","file":"categories-categories-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DeleteComponent } from './delete/delete.component';\r\nimport { UpdateComponent } from './update/update.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { CategoriesComponent } from './categories.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: CategoriesComponent, children: [\r\n      { path: 'agregar', component: CreateComponent },\r\n      { path: 'actualizar', component: UpdateComponent },\r\n      { path: 'actualizar/:_id', component: UpdateComponent },\r\n      { path: 'eliminar', component: DeleteComponent },\r\n      { path: 'eliminar/:_id', component: DeleteComponent },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CategoriesRoutingModule { }\r\n","module.exports = \"<div class=\\\"action-container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n<mat-card>\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>\\r\\n      <h2>{{ service.collectionName }}</h2>\\r\\n    </mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <button mat-button type='button' routerLink='agregar'>Agregar {{ service.className | lowercase }}</button>\\r\\n    <div class=\\\"table-container\\\">\\r\\n      <table mat-table matSort [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z0\\\">\\r\\n\\r\\n        <!-- ID Column -->\\r\\n        <ng-container matColumnDef=\\\"id\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> ID </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element._id}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Name Column -->\\r\\n        <ng-container matColumnDef=\\\"name\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Description Column -->\\r\\n        <ng-container matColumnDef=\\\"description\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Descripci√≥n </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Image Column -->\\r\\n        <ng-container matColumnDef=\\\"imageURL\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Imagen </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            <img src=\\\"{{element.imageURL | showImage }}\\\" [alt]=\\\"element.name\\\" class=\\\"img-fluid\\\">\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Actions Column -->\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Acciones </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            <button mat-button type='button' (click)='onAction(\\\"actualizar\\\",element)'>Actualizar</button>\\r\\n            <button mat-button type='button' (click)='onAction(\\\"eliminar\\\",element)'>Eliminar</button>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n    </div>\\r\\n    <ng-container *ngIf='!objects'>\\r\\n      <mat-spinner class=\\\"mx-auto col-12\\\"></mat-spinner>\\r\\n    </ng-container>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","module.exports = \".mat-column-imageURL {\\n  text-align: center; }\\n  .mat-column-imageURL .img-fluid {\\n    height: 150px; }\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { List } from \"../../shared/helpers/list\";\r\nimport { Category } from \"../../shared/models/category\";\r\nimport { CategoriesService } from \"./categories.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-categories\",\r\n  templateUrl: \"./categories.component.html\",\r\n  styleUrls: [\r\n    \"./categories.component.scss\",\r\n    \"../../shared/styles/crud-list.scss\"\r\n  ]\r\n})\r\nexport class CategoriesComponent extends List<Category> {\r\n  constructor(\r\n    public service: CategoriesService,\r\n    public router: Router,\r\n  ) {\r\n    super(\r\n      service,\r\n      router,\r\n      [\"id\", \"name\", \"description\", \"imageURL\", \"actions\"]\r\n    );\r\n  }\r\n}\r\n","import { SharedModule } from \"../../shared/shared.module\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { CategoriesRoutingModule } from \"./categories-routing.module\";\r\nimport { CategoriesComponent } from \"./categories.component\";\r\nimport { CreateComponent } from \"./create/create.component\";\r\nimport { DeleteComponent } from \"./delete/delete.component\";\r\nimport { UpdateComponent } from \"./update/update.component\";\r\nimport { UploadModule } from \"../../upload/upload.module\";\r\n\r\n@NgModule({\r\n  imports: [SharedModule, UploadModule, CategoriesRoutingModule],\r\n  declarations: [\r\n    CategoriesComponent,\r\n    CreateComponent,\r\n    DeleteComponent,\r\n    UpdateComponent\r\n  ]\r\n})\r\nexport class CategoriesModule {}\r\n","module.exports = \"<form #f='ngForm' (ngSubmit)='onSubmit(f)'>\\r\\n  <mat-card>\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>\\r\\n        <h2>Agregar {{ service.className | lowercase }}</h2>\\r\\n      </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 col-sm-6 col-lg-4 offset-lg-1\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput type=\\\"text\\\" placeholder='Nombre' [(ngModel)]='category.name' name='name' required [readonly]='f.submitted'>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field>\\r\\n            <input matInput type=\\\"text\\\" placeholder='Descripci√≥n' [(ngModel)]='category.description' name='description' [readonly]='f.submitted'>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-12 col-sm-6 col-lg-4 offset-lg-1 text-center my-2\\\">\\r\\n          <app-upload></app-upload>\\r\\n          <input type=\\\"text\\\" placeholder='Image URL' [(ngModel)]='category.imageURL' name='imageURL' class='d-none'>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-button type='submit' [disabled]='f.invalid || f.submitted'>Agregar</button>\\r\\n      <button mat-button type='button' routerLink='../' [disabled]='f.submitted'>Cancelar</button>\\r\\n    </mat-card-actions>\\r\\n    <div class=\\\"col-12 col-sm-6 col-lg-6 offset-lg-1 text-center my-2\\\">\\r\\n      <app-upload></app-upload>\\r\\n      <input type=\\\"text\\\" placeholder='Image URL' [(ngModel)]='category.imageURL' name='imageURL' class='d-none'>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n</form>\"","module.exports = \"\"","import { CategoriesService } from \"../categories.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { NotificationsService } from \"../../../notifications/notifications.service\";\r\nimport { Component, ViewChild } from \"@angular/core\";\r\nimport { Category } from \"../../../shared/models/category\";\r\nimport { Create } from \"../../../shared/helpers/create\";\r\nimport { UploadComponent } from \"../../../upload/upload.component\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { NgForm } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-create\",\r\n  templateUrl: \"./create.component.html\",\r\n  styleUrls: [\r\n    \"./create.component.scss\",\r\n    \"../../../shared/styles/crud-create.scss\"\r\n  ]\r\n})\r\nexport class CreateComponent extends Create<Category> {\r\n  @ViewChild(UploadComponent)\r\n  upload: UploadComponent;\r\n  category = new Category();\r\n  constructor(\r\n    public categoriesService: CategoriesService,\r\n    public router: Router,\r\n    public route: ActivatedRoute,\r\n    public notifications: NotificationsService\r\n  ) {\r\n    super(categoriesService, notifications, router, route);\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    // console.log(form.value);\r\n    this.upload\r\n      .onSubmit(this.categoriesService.apiRoute)\r\n      .subscribe(\r\n        (imageURL: string) => {\r\n          // console.log(imageURL);\r\n          // this.product.imageURL = imageURL;\r\n          const imageCtrl = form.controls.imageURL;\r\n          imageCtrl.setValue(imageURL); // set imageURL input value to the resolt of the upload POST event\r\n          // form.setValue({ ...form.value, \"imageURL\": res.data });\r\n          // console.log(form.value);\r\n          super.onSubmit(form);\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","module.exports = \"<mat-card *ngIf='service.className | lowercase as className'>\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>\\r\\n      <h2>Eliminar {{ className }}</h2>\\r\\n    </mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <p>¬øSeguro que quieres eliminar la {{ className }}\\r\\n      <b>{{ _id }}</b>?\\r\\n    </p>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <button mat-button type='button' (click)='onSubmit()'>Eliminar</button>\\r\\n    <button mat-button type='button' routerLink='../../'>Cancelar</button>\\r\\n  </mat-card-actions>\\r\\n</mat-card>\\r\\n\"","module.exports = \"\"","import { CategoriesService } from \"../categories.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Component } from \"@angular/core\";\r\nimport { NotificationsService } from \"../../../notifications/notifications.service\";\r\nimport { Delete } from \"../../../shared/helpers/delete\";\r\nimport { Category } from \"../../../shared/models/category\";\r\n\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\r\n    \"./delete.component.scss\",\r\n    \"../../../shared/styles/crud-delete.scss\"\r\n  ]\r\n})\r\nexport class DeleteComponent extends Delete<Category> {\r\n  constructor(\r\n    public categoriesService: CategoriesService,\r\n    public notifications: NotificationsService,\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    super(categoriesService, notifications, router, route);\r\n  }\r\n}\r\n","module.exports = \"<form #f='ngForm' (ngSubmit)='onSubmit(f)'>\\r\\n  <mat-card>\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>\\r\\n        <h2>Actualizar {{ service.className | lowercase }}</h2>\\r\\n      </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <ng-container *ngIf='object as category'>\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"text\\\" placeholder='Nombre' [ngModel]='category.name' name='name' required [readonly]='f.submitted'>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"text\\\" placeholder='Descripci√≥n' [ngModel]='category.description' name='description' [readonly]='f.submitted'>\\r\\n        </mat-form-field>\\r\\n        <div class=\\\"col-12 col-sm-6 col-lg-6 offset-lg-1 text-center my-2\\\">\\r\\n          <app-upload [fileURL]='category.imageURL | showImage'></app-upload>\\r\\n          <input type=\\\"text\\\" placeholder='Image URL' [ngModel]='category.imageURL' name='imageURL' class='d-none'>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-button type='submit' [disabled]='f.invalid || f.submitted'>Actualizar</button>\\r\\n      <button mat-button type='button' routerLink='../../' [disabled]='f.submitted'>Cancelar</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</form>\"","module.exports = \"\"","import { Component, ViewChild } from \"@angular/core\";\r\nimport { Category } from \"../../../shared/models/category\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { CategoriesService } from \"../categories.service\";\r\nimport { NotificationsService } from \"../../../notifications/notifications.service\";\r\nimport { Update } from \"../../../shared/helpers/update\";\r\nimport { UploadComponent } from \"../../../upload/upload.component\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: \"app-update\",\r\n  templateUrl: \"./update.component.html\",\r\n  styleUrls: [\r\n    \"./update.component.scss\",\r\n    \"../../../shared/styles/crud-update.scss\"\r\n  ]\r\n})\r\nexport class UpdateComponent extends Update<Category> {\r\n  @ViewChild(UploadComponent)\r\n  upload: UploadComponent;\r\n  constructor(\r\n    public service: CategoriesService,\r\n    public notifications: NotificationsService,\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    super(service, notifications, router, route);\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.upload.onSubmit(this.service.apiRoute).subscribe(\r\n      (imageURL: string) => {\r\n        if (imageURL) {\r\n          form.controls.imageURL.setValue(imageURL);\r\n        } else {\r\n          form.controls.imageURL.disable();\r\n        }\r\n        console.log(form.value);\r\n        // form.reset(form.value);\r\n        super.onSubmit(form);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        console.log(error);\r\n        form.reset(form.value);\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}